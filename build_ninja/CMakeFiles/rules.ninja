# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 4.1

# This file contains all the rules used to get the outputs files
# built from the input files.
# It is included in the main 'build.ninja'.

# =============================================================================
# Project: Qallow
# Configurations: Release
# =============================================================================
# =============================================================================

#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_algorithms_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking C static library.

rule C_STATIC_LIBRARY_LINKER__qallow_algorithms_Release
  command = $PRE_LINK && /usr/sbin/cmake -E rm -f $TARGET_FILE && /usr/sbin/ar qc $TARGET_FILE $LINK_FLAGS $in && /usr/sbin/ranlib $TARGET_FILE && $POST_BUILD
  description = Linking C static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_runtime_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__qallow_runtime_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX static library.

rule CXX_STATIC_LIBRARY_LINKER__qallow_runtime_Release
  command = $PRE_LINK && /usr/sbin/cmake -E rm -f $TARGET_FILE && /usr/sbin/ar qc $TARGET_FILE $LINK_FLAGS $in && /usr/sbin/ranlib $TARGET_FILE && $POST_BUILD
  description = Linking CXX static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_backend_cpu_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking CXX static library.

rule CXX_STATIC_LIBRARY_LINKER__qallow_backend_cpu_Release
  command = $PRE_LINK && /usr/sbin/cmake -E rm -f $TARGET_FILE && /usr/sbin/ar qc $TARGET_FILE $LINK_FLAGS $in && /usr/sbin/ranlib $TARGET_FILE && $POST_BUILD
  description = Linking CXX static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__qallow_backend_cuda_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -rdc=true -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CUDA static library.

rule CUDA_STATIC_LIBRARY_LINKER__qallow_backend_cuda_Release
  command = $PRE_LINK && /usr/sbin/cmake -E rm -f $TARGET_FILE && /usr/sbin/ar qc $TARGET_FILE $LINK_FLAGS $in && /usr/sbin/ranlib $TARGET_FILE && $POST_BUILD
  description = Linking CUDA static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__qallow_Release
  command = /opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__qallow_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_unified_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__qallow_unified_Release
  command = /opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__qallow_unified_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_throughput_bench_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__qallow_throughput_bench_Release
  command = /opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__qallow_throughput_bench_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase01_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase01_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase02_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase02_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase03_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase03_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase04_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase04_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase05_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase05_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase06_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase06_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase07_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase07_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase08_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase08_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase09_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase09_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase10_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase10_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase11_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase11_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase12_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase12_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__phase13_demo_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__phase13_demo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_unit_ethics_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking C executable.

rule C_EXECUTABLE_LINKER__qallow_unit_ethics_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/cc $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking C executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_unit_dl_integration_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__qallow_unit_dl_integration_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling CUDA files.

rule CUDA_COMPILER__qallow_unit_cuda_parallel_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -x cu -c $in -o $out
  description = Building CUDA object $out


#############################################
# Rule for linking CUDA executable.

rule CUDA_EXECUTABLE_DEVICE_LINKER__qallow_unit_cuda_parallel_Release
  command = /opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CUDA executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CUDA executable.

rule CUDA_EXECUTABLE_LINKER__qallow_unit_cuda_parallel_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/bin/g++ $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES -L"/opt/cuda/targets/x86_64-linux/lib/stubs" -L"/opt/cuda/targets/x86_64-linux/lib" && $POST_BUILD
  description = Linking CUDA executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__qallow_integration_smoke_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building C object $out


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_DEVICE_LINKER__qallow_integration_smoke_Release
  command = /opt/cuda/bin/nvcc -forward-unknown-to-host-compiler $LANGUAGE_COMPILE_FLAGS $LINK_FLAGS -Xcompiler=-fPIC -Wno-deprecated-gpu-targets -shared -dlink $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for linking CXX executable.

rule CXX_EXECUTABLE_LINKER__qallow_integration_smoke_Release
  depfile = $DEP_FILE
  deps = gcc
  command = $PRE_LINK && /usr/sbin/c++ $FLAGS $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking CXX executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for running custom commands.

rule CUSTOM_COMMAND
  command = $COMMAND
  description = $DESC


#############################################
# Rule for compiling CXX files.

rule CXX_COMPILER__spdlog_unscanned_Release
  depfile = $DEP_FILE
  deps = gcc
  command = ${LAUNCHER}${CODE_CHECK}/usr/sbin/c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
  description = Building CXX object $out


#############################################
# Rule for linking CXX static library.

rule CXX_STATIC_LIBRARY_LINKER__spdlog_Release
  command = $PRE_LINK && /usr/sbin/cmake -E rm -f $TARGET_FILE && /usr/sbin/ar qc $TARGET_FILE $LINK_FLAGS $in && /usr/sbin/ranlib $TARGET_FILE && $POST_BUILD
  description = Linking CXX static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for re-running cmake.

rule RERUN_CMAKE
  command = /usr/sbin/cmake --regenerate-during-build -S/root/Qallow -B/root/Qallow/build_ninja
  description = Re-running CMake...
  generator = 1


#############################################
# Rule for cleaning all built files.

rule CLEAN
  command = /usr/sbin/ninja $FILE_ARG -t clean $TARGETS
  description = Cleaning all built files...


#############################################
# Rule for printing all primary targets available.

rule HELP
  command = /usr/sbin/ninja -t targets
  description = All primary targets available:

